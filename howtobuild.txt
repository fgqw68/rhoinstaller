This document explains how to build Rhostudio installers for Windows and Mac OSX.

Contents

    How to build Eclipse product
    How to build Rhostudio installer for Windows
    How to build Mac OSX installer


*** How to build Eclipse product ***
(This section is incomplete)

1. Download Eclipse 3.6 for RPC developer config
1.1 dltk
1.2 egit

2. clone Rhostudio repositary (git clone git@github.com:rhomobile/rhostudio.git)
  
3. Import RhoStudio project and Rhostudio feature project into workspace

   3.1 Goto File/Import menu item 
   3.2 Select General/Existing Project into Workspace
   3.3 Select repository directory 
   3.4 Finish   
   3.5 Import 

4. After import RhoStudio project you should see RhoStudio product item in project tree

5. Export product 

   5.1 Open product item 
   5.2 press export button in toolbar
   5.3 Uncheck 'Generate metadata repositary' item 
   5.4 Place destination directory 

6. Copy product files in directory with eclipse assambly <!!!>


*** Build installer for Windows ***


** Download required files **

1. Java Development Kit (32-bit)
    go to http://www.oracle.com/technetwork/java/javase/downloads/jdk-7u4-downloads-1591156.html
    select "Accept license aggrement"
    click "jdk-7u4-windows-i586.exe"

2. Git source control manager (https://github.com/downloads/schacon/testy/Git-1.7.10-preview20120409.exe)

3. NSIS - Nullsoft Scriptable Install System (http://sourceforge.net/projects/nsis/files/NSIS%202/2.46/nsis-2.46-setup.exe/download)
    and NSIS large string patch (http://sourceforge.net/projects/nsis/files/NSIS%202/2.46/nsis-2.46-strlen_8192.zip/download?use_mirror=citylan)

4. Eclipse 3.6.2 (Helios SR2) for RCP and RAP Developers (32-bit) (http://ftp-stud.fht-esslingen.de/pub/Mirrors/eclipse/technology/epp/downloads/release/helios/SR2/eclipse-rcp-helios-SR2-win32.zip)

5. RubyInstaller 1.9.3-p125 for Ruby programming language (http://rubyforge.org/frs/download.php/75848/rubyinstaller-1.9.3-p125.exe)
    and RubyInstaller Development Kit (https://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe)

6. Windows installer package archive (http://rhostudio.s3.amazonaws.com/instant/work/rhoinstaller.zip)


** Install and configure software **

1. Install JDK.

2. Install Git source control manager (select "Run Git from the Windows Command Prompt" on "Adjusting your PATH environment" page).

3. Install NSIS. Extract NSIS large string patch and copy its content into NSIS installation directory (into C:\Program Files (x86)\NSIS in case of typical installation).

4. Create empty directory where you will build installer. It will be referred to as <root> in this document. Path to <root> have to be free of spaces. It is requirement of Ruby which will be installed into subdirectory of <root>.

5. Extract Eclipse archive into <root> directory.

6. Extract Windows installer package archive into <root> directory.
    From <root>\rhoinstaller directory run following commands:
    git checkout .
    git pull

7. Install Ruby into <root>\ruby directory.

8. Remove <root>\rhoinstaller\package\devkit directory.
    Run RubyInstaller Development Kit and extract it to <root>\rhoinstaller\package\devkit directory.

9. Configure Ruby installation. Open new console (cmd.exe) and execute there following commands:
    path <root>\ruby\bin
    cd /d <root>\rhoinstaller\package\devkit
    ruby dk.rb init
    ruby dk.rb install

10. Clone rhostudio and rhodes-system-api-samples repositories into <root>:
    cd /d <root>
    git clone http://github.com/rhomobile/rhostudio.git
    git clone http://github.com/rhomobile/rhodes-system-api-samples.git

11. Create <root>\gems directory and place rhodes, rhoelements, rhoconnect and rhoconnect-adapters gems there.

12. Create Eclipse workspace and configure Eclipse.
    Run Eclipse with command (always use absolute path as -data parameter):
    <root>\eclipse\eclipse -data <root>\workspace

    From menu select "Help"->"Install new software...".
    Press "Add...".
    Enter DLTK as name and http://download.eclipse.org/technology/dltk/updates/ as location, press "OK".
    Wait until list will be populated with values, then mark "Dynamic Languages Toolkit (DLTK) 2.0" and press "Next >".
    Press "Next >" again.
    Accept license and press "Finish".
    Wait for finish of DLTK installation.
    Restart Eclipse from "Software Updates" dialog.

    From menu select "File"->"Import...".
    In list of import sources select "General"->"Existing Projects into Workspace", then press "Next >".
    Press "Browse...".
    Select <root>\rhostudio directory, press "OK".
    Press "Finish".

    From menu select "Window"->"Show view"->"Problems".
    Expand "Errors" in Problems view, open context menu for any error, select "Quick Fix".
    Press "Finish".
    Press "OK".

    Delete all errors from Problems view.

    From menu select "Project"->"Clean...".
    Press "OK".
    Check that there are no errors in Problems view after clean (warnings only).

    Close Eclipse.


** Build installer **

1. Edit <root>\rhoinstaller\script\Rakefile file. You can tune following variables:
    $version        = '0200'
    $betaVersion    = '0526'
    $isMotorolaBeta = true
    $nsisPath       = 'C:/Program Files (x86)/NSIS/makensis.exe'

2. Open new console (cmd.exe) and execute following commands:
    path <root>\ruby\bin;C:\Windows\system32
    cd /d <root>\rhoinstaller\script
    rake installer:motorola

3. Wait while script finishes. New installer is created in <root> directory.



*** Build installer for Mac OSX ***


** Download required files **

1. Git source control manager (http://git-osx-installer.googlecode.com/files/git-1.7.10.1-intel-universal-snow-leopard.dmg)

2. Eclipse 3.6.2 (Helios SR2) for RCP and RAP Developers (64-bit) (http://ftp.halifax.rwth-aachen.de/eclipse//technology/epp/downloads/release/helios/SR2/eclipse-rcp-helios-SR2-macosx-cocoa-x86_64.tar.gz)

3. RhoMobileSuiteInstaller.dmg image (http://rhostudio.s3.amazonaws.com/instant/work/RhoMobileSuiteInstaller.dmg)


** Install and configure software **

1. Install Git source control manager

2. Extract Eclipse archive.

3. Clone rhostudio and rhodes-system-api-samples repositories:
    git clone http://github.com/rhomobile/rhostudio.git
    git clone http://github.com/rhomobile/rhodes-system-api-samples.git


** Build installer **

1. Create com.rhomobile.rhostudio plugin
    Run extracted Eclipse
    In "Select a workspace" dialog create new workspace.

    From menu select "Help"->"Install new software...".
    Press "Add...".
    Enter DLTK as name and http://download.eclipse.org/technology/dltk/updates/ as location, press "OK".
    Wait until list will be populated with values, then mark "Dynamic Languages Toolkit (DLTK) 2.0" and press "Next >".
    Press "Next >" again.
    Accept license and press "Finish".
    Wait for finish of DLTK installation.
    Restart Eclipse from "Software Updates" dialog.

    From menu select "File"->"Import...".
    In list of import sources select "General"->"Existing Projects into Workspace", then press "Next >".
    Press "Browse...".
    Select directory with rhostudio clone, press "Open".
    Press "Finish".

    From menu select "Window"->"Show view"->"Problems".
    Expand "Errors" in Problems view, open context menu for any error, select "Quick Fix".
    Press "Finish".
    Press "OK".

    Delete all errors from Problems view.

    From menu select "Project"->"Clean...".
    Press "OK".
    Check that there are no errors in Problems view after clean (warnings only).

    From menu select "File"->"Export..."
    In list of export destinations select "Plug-in Development"->"Deployable plug-ins and frapments", then press "Next >".
    Mark "com.rhomobile.rhostudio" plugin.
    Select destination directory.
    Press "Finish".

    Check that in destination directory plugins/com.rhomobile.rhostudio_<version>.jar file is created.

    Close Eclipse.

2. Mount RhoMobileSuiteInstaller.dmg. Mount point will be referred to as <mount> below.

3. Remove old gems from <mount>/.gems folder.
    Put new rhodes and rhoelements gems there.

4. Change gems names in <mount>/Install\ gems and <mount>/Install\ gems\ on\ rvm scripts.

5. Remove old com.rhomobile.rhostudio plugin from <mount>/Motorola\ RhoStudio/plugins folder
    Put new plugin there.

6. Remove contents of <mount>/samples/rhodes-system-api-samples folder.
    Copy content of cloned rhodes-system-api-samples repository there.
    Remove <mount>/samples/rhodes-system-api-samples/.git folder and <mount>/samples/rhodes-system-api-samples/.gitignore file.

7. Unpack rhoelements gem. Following command unpacks gem in current folder:
    sudo gem unpack rhoelements-<version>.gem

8. Remove contents of <mount>/RhoElements2\ Shared\ Runtime folder.
    Locate RhoElements2/Runtime subfolder in unpacked gem.
    Copy its contents to <mount>/RhoElements2\ Shared\ Runtime folder.
    Remove located folder.

9. Remove contents of <mount>/RhoElements2 folder.
    Locate RhoElements2 subfolder in unpacked gem.
    Copy its contents to <mount>/RhoElements2 folder.

10. Locate ReadMe.html and RhoStudio\ and\ Rho\ Software\ License\ Agreements.doc files in unpacked gem.
    Copy them to <mount> folder.

11. Unpack rhodes gem. Following command unpacks gem in current folder:
    sudo gem unpack rhodes-<version>.gem

12. Locate CREDITS file in unpacked gem.
    Copy it to <mount> folder.

13. Open mounted image in Finder, hide side bar, "maximize" Finder window to fit content and close it.

14. Unmount image.

15. Open the image in disk utility and convert to 'read only' image with compressed content.
    There is sample of new image name: 'RhoMobileSuiteInstaller2.0.0.beta5.24.dmg'
